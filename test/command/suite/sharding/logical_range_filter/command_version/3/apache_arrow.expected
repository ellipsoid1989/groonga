plugin_register sharding
[[0,0.0,0.0],true]
table_create ShortTextTable TABLE_HASH_KEY ShortText
[[0,0.0,0.0],true]
table_create  Logs_20150203 TABLE_HASH_KEY ShortText
[[0,0.0,0.0],true]
column_create Logs_20150203 int32 COLUMN_SCALAR Int32
[[0,0.0,0.0],true]
column_create Logs_20150203 int32_vector COLUMN_VECTOR Int32
[[0,0.0,0.0],true]
column_create Logs_20150203 int64 COLUMN_SCALAR Int64
[[0,0.0,0.0],true]
column_create Logs_20150203 reference_short_text COLUMN_SCALAR ShortTextTable
[[0,0.0,0.0],true]
column_create Logs_20150203 reference_short_text_vector   COLUMN_VECTOR ShortTextTable
[[0,0.0,0.0],true]
column_create Logs_20150203 time COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20150203 uint32 COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
table_create  Logs_20150204 TABLE_HASH_KEY ShortText
[[0,0.0,0.0],true]
column_create Logs_20150204 int32 COLUMN_SCALAR Int32
[[0,0.0,0.0],true]
column_create Logs_20150204 int32_vector COLUMN_VECTOR Int32
[[0,0.0,0.0],true]
column_create Logs_20150204 int64 COLUMN_SCALAR Int64
[[0,0.0,0.0],true]
column_create Logs_20150204 reference_short_text COLUMN_SCALAR ShortTextTable
[[0,0.0,0.0],true]
column_create Logs_20150204 reference_short_text_vector   COLUMN_VECTOR ShortTextTable
[[0,0.0,0.0],true]
column_create Logs_20150204 time COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20150204 uint32 COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
table_create  Logs_20150205 TABLE_HASH_KEY ShortText
[[0,0.0,0.0],true]
column_create Logs_20150205 int32 COLUMN_SCALAR Int32
[[0,0.0,0.0],true]
column_create Logs_20150205 int32_vector COLUMN_VECTOR Int32
[[0,0.0,0.0],true]
column_create Logs_20150205 int64 COLUMN_SCALAR Int64
[[0,0.0,0.0],true]
column_create Logs_20150205 reference_short_text COLUMN_SCALAR ShortTextTable
[[0,0.0,0.0],true]
column_create Logs_20150205 reference_short_text_vector   COLUMN_VECTOR ShortTextTable
[[0,0.0,0.0],true]
column_create Logs_20150205 time COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20150205 uint32 COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
load --table Logs_20150203
[
{
  "_key": "2015-02-03 23:59:58",
  "int32": -29,
  "int32_vector": [1, -2, 3],
  "int64": 4294967296,
  "reference_short_text": "Hello 2015-02-03",
  "reference_short_text_vector": ["2015-02-03 1", "2015-02-03 2"],
  "time": "2015-02-03 23:59:58",
  "uint32": 29
},
{
  "_key": "2015-02-03 23:59:59",
  "int32": -29,
  "int32_vector": [1, -2, 3],
  "int64": 4294967296,
  "reference_short_text": "Hello again 2015-02-03",
  "reference_short_text_vector": ["2015-02-03 3", "2015-02-03 4"],
  "time": "2015-02-03 23:59:59",
  "uint32": 2929
}
]
[[0,0.0,0.0],2]
load --table Logs_20150204
[
{
  "_key": "2015-02-04 00:00:00",
  "int32": -290,
  "int32_vector": [10, -20, 30],
  "int64": 4294967297,
  "reference_short_text": "Hello 2015-02-04",
  "reference_short_text_vector": ["2015-02-04 1", "2015-02-04 2", "2015-02-04 3"],
  "time": "2015-02-04 00:00:00",
  "uint32": 290
}
]
[[0,0.0,0.0],1]
load --table Logs_20150205
[
{
  "_key": "2015-02-05 00:00:00",
  "int32": -2900,
  "int32_vector": [100, -200, 300],
  "int64": 4294967298,
  "reference_short_text": "Hello 2015-02-05",
  "reference_short_text_vector": [],
  "time": "2015-02-05 00:00:00",
  "uint32": 2900
}
]
[[0,0.0,0.0],1]
logical_range_filter Logs time   --command_version 3   --output_type apache-arrow
_key: dictionary<values=string, indices=int32, ordered=0>
int32: int32
int32_vector: list<item: int32>
int64: int64
reference_short_text: dictionary<values=string, indices=int32, ordered=0>
reference_short_text_vector: list<item: dictionary<values=string, indices=int32, ordered=0>>
time: timestamp[ns]
uint32: uint32
	_key	int32	int32_vector	     int64	reference_short_text	reference_short_text_vector	                     time	uint32
0	2015-02-03 23:59:58	  -29	[
  1,
  -2,
  3
]	4294967296	Hello 2015-02-03    	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2"
  ]
-- indices:
  [
    0,
    1
  ]	2015-02-03T23:59:58+09:00	    29
1	2015-02-03 23:59:59	  -29	[
  1,
  -2,
  3
]	4294967296	Hello again 2015-02-03	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2",
    "2015-02-03 3",
    "2015-02-03 4"
  ]
-- indices:
  [
    2,
    3
  ]	2015-02-03T23:59:59+09:00	  2929
2	2015-02-04 00:00:00	 -290	[
  10,
  -20,
  30
]	4294967297	Hello 2015-02-04    	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2",
    "2015-02-03 3",
    "2015-02-03 4",
    "2015-02-04 1",
    "2015-02-04 2",
    "2015-02-04 3"
  ]
-- indices:
  [
    4,
    5,
    6
  ]	2015-02-04T00:00:00+09:00	   290
3	2015-02-05 00:00:00	-2900	[
  100,
  -200,
  300
]	4294967298	Hello 2015-02-05    	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2",
    "2015-02-03 3",
    "2015-02-03 4",
    "2015-02-04 1",
    "2015-02-04 2",
    "2015-02-04 3"
  ]
-- indices:
  []	2015-02-05T00:00:00+09:00	  2900
========================================
return_code: int32
start_time: timestamp[ns]
elapsed_time: double
-- metadata --
GROONGA:data_type: metadata
	return_code	               start_time	elapsed_time
0	          0	1970-01-01T09:00:00+09:00	    0.000000
#>logical_range_filter --command_version "3" --logical_table "Logs" --output_type "apache-arrow" --shard_key "time"
#:000000000000000 sort(2)[Logs_20150203]: time
#:000000000000000 send(0)
#:000000000000000 send(0)
#:000000000000000 sort(1)[Logs_20150204]: time
#:000000000000000 send(0)
#:000000000000000 sort(1)[Logs_20150205]: time
#:000000000000000 send(0)
#:000000000000000 output(4)
#:000000000000000 send(0)
#<000000000000000 rc=0
logical_range_filter Logs time   --command_version 3   --output_type apache-arrow
_key: dictionary<values=string, indices=int32, ordered=0>
int32: int32
int32_vector: list<item: int32>
int64: int64
reference_short_text: dictionary<values=string, indices=int32, ordered=0>
reference_short_text_vector: list<item: dictionary<values=string, indices=int32, ordered=0>>
time: timestamp[ns]
uint32: uint32
	_key	int32	int32_vector	     int64	reference_short_text	reference_short_text_vector	                     time	uint32
0	2015-02-03 23:59:58	  -29	[
  1,
  -2,
  3
]	4294967296	Hello 2015-02-03    	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2"
  ]
-- indices:
  [
    0,
    1
  ]	2015-02-03T23:59:58+09:00	    29
1	2015-02-03 23:59:59	  -29	[
  1,
  -2,
  3
]	4294967296	Hello again 2015-02-03	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2",
    "2015-02-03 3",
    "2015-02-03 4"
  ]
-- indices:
  [
    2,
    3
  ]	2015-02-03T23:59:59+09:00	  2929
2	2015-02-04 00:00:00	 -290	[
  10,
  -20,
  30
]	4294967297	Hello 2015-02-04    	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2",
    "2015-02-03 3",
    "2015-02-03 4",
    "2015-02-04 1",
    "2015-02-04 2",
    "2015-02-04 3"
  ]
-- indices:
  [
    4,
    5,
    6
  ]	2015-02-04T00:00:00+09:00	   290
3	2015-02-05 00:00:00	-2900	[
  100,
  -200,
  300
]	4294967298	Hello 2015-02-05    	
-- dictionary:
  [
    "2015-02-03 1",
    "2015-02-03 2",
    "2015-02-03 3",
    "2015-02-03 4",
    "2015-02-04 1",
    "2015-02-04 2",
    "2015-02-04 3"
  ]
-- indices:
  []	2015-02-05T00:00:00+09:00	  2900
========================================
return_code: int32
start_time: timestamp[ns]
elapsed_time: double
-- metadata --
GROONGA:data_type: metadata
	return_code	               start_time	elapsed_time
0	          0	1970-01-01T09:00:00+09:00	    0.000000
#>logical_range_filter --command_version "3" --logical_table "Logs" --output_type "apache-arrow" --shard_key "time"
#:000000000000000 sort(2)[Logs_20150203]: time
#:000000000000000 send(0)
#:000000000000000 send(0)
#:000000000000000 sort(1)[Logs_20150204]: time
#:000000000000000 send(0)
#:000000000000000 sort(1)[Logs_20150205]: time
#:000000000000000 send(0)
#:000000000000000 output(4)
#:000000000000000 send(0)
#<000000000000000 rc=0
