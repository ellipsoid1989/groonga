plugin_register sharding
[[0,0.0,0.0],true]
plugin_register functions/time
[[0,0.0,0.0],true]
table_create Logs_20170315 TABLE_NO_KEY
[[0,0.0,0.0],true]
column_create Logs_20170315 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20170315 price COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
table_create Logs_20170316 TABLE_NO_KEY
[[0,0.0,0.0],true]
column_create Logs_20170316 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20170316 price COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
table_create Logs_20170317 TABLE_NO_KEY
[[0,0.0,0.0],true]
column_create Logs_20170317 timestamp COLUMN_SCALAR Time
[[0,0.0,0.0],true]
column_create Logs_20170317 price COLUMN_SCALAR UInt32
[[0,0.0,0.0],true]
load --table Logs_20170315
[
{"timestamp": "2017/03/15 00:00:00", "price":  300},
{"timestamp": "2017/03/15 01:00:00", "price": 1000},
{"timestamp": "2017/03/15 02:00:00", "price":  900}
]
[[0,0.0,0.0],3]
load --table Logs_20170316
[
{"timestamp": "2017/03/16 10:00:00", "price":  530},
{"timestamp": "2017/03/16 11:00:00", "price":  110},
{"timestamp": "2017/03/16 12:00:00", "price":  520}
]
[[0,0.0,0.0],3]
load --table Logs_20170317
[
{"timestamp": "2017/03/17 20:00:00", "price":  400},
{"timestamp": "2017/03/17 21:00:00", "price":  800},
{"timestamp": "2017/03/17 22:00:00", "price":  300}
]
[[0,0.0,0.0],3]
table_create Times TABLE_PAT_KEY Time
[[0,0.0,0.0],true]
column_create Times logs_20170315 COLUMN_INDEX Logs_20170315 timestamp
[[0,0.0,0.0],true]
column_create Times logs_20170316 COLUMN_INDEX Logs_20170316 timestamp
[[0,0.0,0.0],true]
column_create Times logs_20170317 COLUMN_INDEX Logs_20170317 timestamp
[[0,0.0,0.0],true]
log_level --level dump
[[0,0.0,0.0],true]
logical_range_filter Logs   --shard_key timestamp   --columns[hour2].stage initial   --columns[hour2].type Time   --columns[hour2].flags COLUMN_SCALAR   --columns[hour2].value 'time_classify_hour(timestamp, 2)'   --sort_keys 'hour2,-price'   --output_columns _id,hour2,price
[
  [
    0,
    0.0,
    0.0
  ],
  [
    [
      [
        "_id",
        "UInt32"
      ],
      [
        "hour2",
        "Time"
      ],
      [
        "price",
        "UInt32"
      ]
    ],
    [
      2,
      1489503600.0,
      1000
    ],
    [
      1,
      1489503600.0,
      300
    ],
    [
      3,
      1489510800.0,
      900
    ],
    [
      1,
      1489626000.0,
      530
    ],
    [
      2,
      1489626000.0,
      110
    ],
    [
      3,
      1489633200.0,
      520
    ],
    [
      2,
      1489748400.0,
      800
    ],
    [
      1,
      1489748400.0,
      400
    ],
    [
      3,
      1489755600.0,
      300
    ]
  ]
]
#|-| [obj][open] <273>(<Logs_20170315.timestamp>):<64>(<column:fix_size>)
#|-| [obj][open] <272>(<Logs_20170315>):<51>(<table:no_key>)
#|-| [obj][open] <281>(<Times>):<49>(<table:pat_key>)
#|-| [obj][open] <282>(<Times.logs_20170315>):<72>(<column:index>)
#|d| [logical_range_filter][select] <Logs_20170315>: dynamic columns are used
#|-| [obj][open] <274>(<Logs_20170315.price>):<64>(<column:fix_size>)
#|-| [obj][close] <274>(<Logs_20170315.price>):<64>(<column:fix_size>)
#|-| [obj][open] <274>(<Logs_20170315.price>):<64>(<column:fix_size>)
#|-| [obj][close] <274>(<Logs_20170315.price>):<64>(<column:fix_size>)
#|-| [obj][open] <274>(<Logs_20170315.price>):<64>(<column:fix_size>)
#|-| [obj][close] <274>(<Logs_20170315.price>):<64>(<column:fix_size>)
#|-| [obj][close] <282>(<Times.logs_20170315>):<72>(<column:index>)
#|-| [obj][close] <281>(<Times>):<49>(<table:pat_key>)
#|-| [obj][open] <276>(<Logs_20170316.timestamp>):<64>(<column:fix_size>)
#|-| [obj][open] <275>(<Logs_20170316>):<51>(<table:no_key>)
#|-| [obj][open] <281>(<Times>):<49>(<table:pat_key>)
#|-| [obj][open] <283>(<Times.logs_20170316>):<72>(<column:index>)
#|d| [logical_range_filter][select] <Logs_20170316>: dynamic columns are used
#|-| [obj][open] <277>(<Logs_20170316.price>):<64>(<column:fix_size>)
#|-| [obj][close] <277>(<Logs_20170316.price>):<64>(<column:fix_size>)
#|-| [obj][open] <277>(<Logs_20170316.price>):<64>(<column:fix_size>)
#|-| [obj][close] <277>(<Logs_20170316.price>):<64>(<column:fix_size>)
#|-| [obj][close] <283>(<Times.logs_20170316>):<72>(<column:index>)
#|-| [obj][close] <281>(<Times>):<49>(<table:pat_key>)
#|-| [obj][close] <273>(<Logs_20170315.timestamp>):<64>(<column:fix_size>)
#|-| [obj][open] <279>(<Logs_20170317.timestamp>):<64>(<column:fix_size>)
#|-| [obj][open] <278>(<Logs_20170317>):<51>(<table:no_key>)
#|-| [obj][open] <281>(<Times>):<49>(<table:pat_key>)
#|-| [obj][open] <284>(<Times.logs_20170317>):<72>(<column:index>)
#|d| [logical_range_filter][select] <Logs_20170317>: dynamic columns are used
#|-| [obj][open] <280>(<Logs_20170317.price>):<64>(<column:fix_size>)
#|-| [obj][close] <280>(<Logs_20170317.price>):<64>(<column:fix_size>)
#|-| [obj][open] <280>(<Logs_20170317.price>):<64>(<column:fix_size>)
#|-| [obj][close] <280>(<Logs_20170317.price>):<64>(<column:fix_size>)
#|-| [obj][close] <284>(<Times.logs_20170317>):<72>(<column:index>)
#|-| [obj][close] <281>(<Times>):<49>(<table:pat_key>)
#|-| [obj][close] <276>(<Logs_20170316.timestamp>):<64>(<column:fix_size>)
#|-| [obj][close] <279>(<Logs_20170317.timestamp>):<64>(<column:fix_size>)
#>logical_range_filter --columns[hour2].flags "COLUMN_SCALAR" --columns[hour2].stage "initial" --columns[hour2].type "Time" --columns[hour2].value "time_classify_hour(timestamp, 2)" --logical_table "Logs" --output_columns "_id,hour2,price" --shard_key "timestamp" --sort_keys "hour2,-price"
#:000000000000000 filter(3): true
#:000000000000000 columns[hour2](3)
#:000000000000000 sort(3)[Logs_20170315]: hour2,-price
#:000000000000000 filter(3): true
#:000000000000000 columns[hour2](3)
#:000000000000000 sort(3)[Logs_20170316]: hour2,-price
#:000000000000000 filter(3): true
#:000000000000000 columns[hour2](3)
#:000000000000000 sort(3)[Logs_20170317]: hour2,-price
#:000000000000000 output(9)
#:000000000000000 send(0)
#<000000000000000 rc=0
log_level --level notice
[[0,0.0,0.0],true]
