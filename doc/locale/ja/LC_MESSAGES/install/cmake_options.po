# -*- po -*-
# Japanese translations for Groonga package.
# Copyright (C) 2009-2022 Groonga Project
# This file is distributed under the same license as the Groonga package.
# Automatically generated, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version: Groonga 12.0.8\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2022-09-02 03:00+0900\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

msgid "CMake options"
msgstr "CMake オプション"

msgid "This section describes important options of CMake."
msgstr "このセクションはCMakeの重要なオプションについて記載しています。"

msgid ""
"To get more details about installing Groonga from the source with CMake on a "
"specific environment, find the document for the specific environment from :"
"doc:`/install`."
msgstr ""
":doc:`/install` にある特定環境用のドキュメントに、CMakeでビルドする際のその環"
"境向けのより詳細な情報があります。特定環境用のドキュメントがある場合は、まず"
"そちらを参照してください。"

msgid "``-G GENERATOR``"
msgstr ""

msgid "Specify a generator."
msgstr "ジェネレータを指定します。"

msgid "The default is depending on the system."
msgstr "デフォルトはシステムよって異なります。"

msgid ""
"You can check the default generator and available generators by ``cmake --"
"help``."
msgstr ""
"``cmake --help`` でデフォルトのジェネレータと、利用可能なジェネレータを確認す"
"ることができます。"

msgid ""
"Here is an example how to specify ``Visual Studio 17 2022 x64`` as a "
"generator. You can specify a target platform name (architecture) with the ``-"
"A`` option."
msgstr ""
"以下は ``Visual Studio 17 2022 x64`` をジェネレータに指定する例です。``-A`` "
"オプションでプラットフォーム（アーキテクチャ）を指定できます。"

msgid "``-DCMAKE_INSTALL_PREFIX``"
msgstr ""

msgid "Specify a directory to install Groonga."
msgstr "Groongaのインストール先のディレクトリ/フォルダを指定します。"

msgid ""
"The default is depending on the system, e.g. ``/usr/local`` or ``C:/Program "
"Files/groonga``."
msgstr ""
"デフォルトはシステムにより異なります。例えば、 ``/usr/local`` や ``C:/"
"Program Files/groonga`` です。"

msgid ""
"Here is an example how to specify ``/tmp/local/`` as an install directory."
msgstr "以下は `/tmp/local/`` をインストール先として指定する例です。"

msgid "``-DGRN_WITH_MRUBY``"
msgstr ""

msgid "Enables mruby support."
msgstr "mrubyサポートを有効化します。"

msgid ""
"You can use the :doc:`/reference/sharding` plugin and :doc:`/reference/"
"commands/ruby_eval` with the mruby support."
msgstr ""
"mrubyサポートを有効にすることで :doc:`/reference/sharding` プラグインと :doc:"
"`/reference/commands/ruby_eval` が使用可能になります。"

msgid "The default is ``OFF``."
msgstr "デフォルトは ``OFF`` です。"

msgid ""
"Groonga builds bundled mruby if the mruby support is enabled. In order to "
"build mruby, you must install some requierd libraries. See the `mruby "
"compile guide <https://github.com/mruby/mruby/blob/master/doc/guides/compile."
"md>`_ for more details."
msgstr ""
"mrubyサポートが有効な場合、Groongaは同梱しているmrubyをビルドします。そのた"
"め、mrubyをビルドするのに必要なライブラリをインストールする必要があります。詳"
"細は `mrubyのコンパイルガイド <https://github.com/mruby/mruby/blob/master/"
"doc/guides/compile.md>`_ を参照してください。"

msgid "Here is an example how to enable the mruby support."
msgstr "以下はmrubyサポートを有効にする例です。"

msgid "``-DGRN_WITH_APACHE_ARROW``"
msgstr ""

msgid "Enables Apache Arrow support."
msgstr "Apache Arrowサポートを有効化します。"

msgid ""
"In addition to using Apache Arrow IPC streaming format output, you can also "
"use multithreading processing that is used in :ref:`select-n-workers` and :"
"doc:`/reference/functions/query_parallel_or` with the Apache Arrow support."
msgstr ""
"Apache Arrowサポートを有効化すると、Apache ArrowのIPC streaming formatが使え"
"るだけでなく、 :ref:`select-n-workers` や :doc:`/reference/functions/"
"query_parallel_or` でマルチスレッドで処理できるようになります。"

msgid ""
"You can install Apache Arrow following to `the official installation "
"procedure <https://arrow.apache.org/install/>`_."
msgstr ""
"Apache Arrowは `公式のドキュメントの手順 <https://arrow.apache.org/install/"
">`_ にしたがってインストールしてください。"

msgid "Here is an example how to enable the Apache Arrow support."
msgstr "以下はApache Arrowサポートを有効にする例です。"

msgid ""
"If you install Apache Arrow manually, you need to use the :ref:`cmake-"
"options-cmake-prefix-path` option."
msgstr ""
"Apache Arrowを手動でインストールしている場合、 :ref:`cmake-options-cmake-"
"prefix-path` オプションを指定してください。"

msgid "``-DCMAKE_PREFIX_PATH=PATHS``"
msgstr ""

msgid "Adds search paths for ``.cmake`` files."
msgstr "``.cmake`` ファイルの検索パスを追加します。"

msgid ""
"You can specify multiple paths using ``:`` on UNIX or ``;`` on Windows to "
"separate."
msgstr ""
"UNIXでは ``:`` で、Windowsでは ``;`` 区切ることで複数のパスを指定できます。"

msgid ""
"In case of using libraries installed via a package manager, you do not need "
"to specify this parameter. It is because ``.cmake`` files for those "
"libraries are in the default search paths of CMake."
msgstr ""
"パッケージ管理システムを使用してインストールしたライブラリを使いたい場合は、 "
"CMake のデフォルトの検索パスに ``.cmake`` ファイルが存在するためこのパラメー"
"タを指定する必要はありません。"

msgid ""
"In case of using libraries installed in non-system directories such as ``/"
"usr``, you need to specify ``.cmake`` file paths of those libraries by this "
"parameter."
msgstr ""
"使用してインストールしたライブラリを使いたい場合は、 CMake のデフォルトの検索"
"パスに ``.cmake`` ファイルが存在するためこのパラメータを指定する必要はありま"
"せん。"

msgid ""
"Here is an example how to specify a ``.cmake`` file path for ``/tmp/local/"
"lib/arrow/cmake/arrowConfig.cmake``."
msgstr ""
"以下は `/tmp/local/lib/arrow/cmake/arrowConfig.cmake`` の.pcファイルを指定す"
"る例です。"
